package jsonconvert

import (
	"fmt"
	"reflect"
	"strings"

	jen "github.com/dave/jennifer/jen"
)

func TransformJSON(data map[string]interface{}) (string, error) {

	i := jen.Type().Id("AutoGenerated").Struct().Block()
	for key, element := range data {
		j := jen.Id(strings.Title(key))

		switch element.(type) {
		case string:
			j.Add(jen.String())
		case bool:
			j.Add(jen.Bool())
		case float64:
			j.Add(jen.Int())
		case []interface{}:
			// TODO
		default:
			fmt.Println(reflect.TypeOf(element))
			j.Add(jen.Uint16())
		}

		i.Add(j).Tag(map[string]string{"bson": key})
	}
	result := fmt.Sprintf("%#v", i)

	return result, nil
}
